---
# 安装openresty，不作配置
- name: install prepare software
  apt: name="{{item}}" state=present
  sudo: true
  with_items:
    - "libreadline-dev"
    - "libpcre3-dev"
    - "libssl-dev"
    - "perl"
    - "build-essential"


- stat: path="/usr/local/openresty"
  register: openresty

- name: download openresty
  get_url: url="{{openresty_download_url}}" dest="/tmp" owner=root group=root
  when: openresty.stat.exists == False
  tags:
    - install

- name: install nginx
  unarchive: src="/tmp/{{openresty_version}}.tar.gz" dest="/tmp" mode="go-w" copy=no
  when: openresty.stat.exists == False
  tags:
    - install



- name: ./configure --with-luajit
  shell: "cd /tmp/{{openresty_version}}/ && sudo ./configure --with-luajit  "
  when: openresty.stat.exists == False
  tags:
    - install

- name: make openresty
  shell: "cd /tmp/{{openresty_version}}/  && make && sudo make install"
  when: openresty.stat.exists == False
  tags:
    - install


- name: link openresty home "{{openresty_home}}"
  file: src="{{openresty_home}}" dest="/usr/local/nginx" owner=root group=root state=link
  tags:
    - install

- name: mv resty-template to right path
  copy: src="resty-template-1.9/" dest="{{openresty_home}}/lualib/resty/" owner=root group=root
  tags:
    - install
    - openresty-plugin

- name: mkdir log folder
  file: path="{{nginx_log_path}}" owner=nobody group=root state=directory mode=0755
  tags:
    - install

- name: config nginx.conf
  template: src="nginx.conf" force=true dest="{{openresty_home }}/nginx/conf/" owner=root group=root
  tags:
    - configure


- name: copy nginx init.d script
  template: src="nginx" dest="/etc/init.d" force=true
  tags:
    - configure

- file: dest="/etc/init.d/nginx" state=touch mode="u=rwx,g=rx,o=rx" force=true owner=root group=root
  notify: restart nginx
  tags:
    - configure

- shell: "sudo update-rc.d -f nginx defaults"
  notify: restart nginx
  tags:
    - configure

- name: mkdir vhosts dir
  file: path="{{openresty_vhosts_path}}" state=directory owner=root group=root recurse=true
  notify: restart nginx
  tags:
    - configure


- name: restart nginx
  service: name="nginx" state="started"
  tags:
    - install
